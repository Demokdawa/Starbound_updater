# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: starbound.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='starbound.proto',
  package='',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n\x0fstarbound.proto\"h\n\x06MyDict\x12+\n\ndictionary\x18\x01 \x03(\x0b\x32\x17.MyDict.DictionaryEntry\x1a\x31\n\x0f\x44ictionaryEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"l\n\x08MyConfig\x12-\n\ndictionary\x18\x01 \x03(\x0b\x32\x19.MyConfig.DictionaryEntry\x1a\x31\n\x0f\x44ictionaryEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x07\n\x05\x45mpty2,\n\nDictSender\x12\x1e\n\tsend_dict\x12\x06.Empty\x1a\x07.MyDict\"\x00\x32/\n\tGetConfig\x12\"\n\x0bsend_config\x12\x06.Empty\x1a\t.MyConfig\"\x00\x62\x06proto3')
)




_MYDICT_DICTIONARYENTRY = _descriptor.Descriptor(
  name='DictionaryEntry',
  full_name='MyDict.DictionaryEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='MyDict.DictionaryEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='MyDict.DictionaryEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=_b('8\001'),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=74,
  serialized_end=123,
)

_MYDICT = _descriptor.Descriptor(
  name='MyDict',
  full_name='MyDict',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='dictionary', full_name='MyDict.dictionary', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_MYDICT_DICTIONARYENTRY, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=19,
  serialized_end=123,
)


_MYCONFIG_DICTIONARYENTRY = _descriptor.Descriptor(
  name='DictionaryEntry',
  full_name='MyConfig.DictionaryEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='MyConfig.DictionaryEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='MyConfig.DictionaryEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=_b('8\001'),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=74,
  serialized_end=123,
)

_MYCONFIG = _descriptor.Descriptor(
  name='MyConfig',
  full_name='MyConfig',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='dictionary', full_name='MyConfig.dictionary', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_MYCONFIG_DICTIONARYENTRY, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=125,
  serialized_end=233,
)


_EMPTY = _descriptor.Descriptor(
  name='Empty',
  full_name='Empty',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=235,
  serialized_end=242,
)

_MYDICT_DICTIONARYENTRY.containing_type = _MYDICT
_MYDICT.fields_by_name['dictionary'].message_type = _MYDICT_DICTIONARYENTRY
_MYCONFIG_DICTIONARYENTRY.containing_type = _MYCONFIG
_MYCONFIG.fields_by_name['dictionary'].message_type = _MYCONFIG_DICTIONARYENTRY
DESCRIPTOR.message_types_by_name['MyDict'] = _MYDICT
DESCRIPTOR.message_types_by_name['MyConfig'] = _MYCONFIG
DESCRIPTOR.message_types_by_name['Empty'] = _EMPTY
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

MyDict = _reflection.GeneratedProtocolMessageType('MyDict', (_message.Message,), dict(

  DictionaryEntry = _reflection.GeneratedProtocolMessageType('DictionaryEntry', (_message.Message,), dict(
    DESCRIPTOR = _MYDICT_DICTIONARYENTRY,
    __module__ = 'starbound_pb2'
    # @@protoc_insertion_point(class_scope:MyDict.DictionaryEntry)
    ))
  ,
  DESCRIPTOR = _MYDICT,
  __module__ = 'starbound_pb2'
  # @@protoc_insertion_point(class_scope:MyDict)
  ))
_sym_db.RegisterMessage(MyDict)
_sym_db.RegisterMessage(MyDict.DictionaryEntry)

MyConfig = _reflection.GeneratedProtocolMessageType('MyConfig', (_message.Message,), dict(

  DictionaryEntry = _reflection.GeneratedProtocolMessageType('DictionaryEntry', (_message.Message,), dict(
    DESCRIPTOR = _MYCONFIG_DICTIONARYENTRY,
    __module__ = 'starbound_pb2'
    # @@protoc_insertion_point(class_scope:MyConfig.DictionaryEntry)
    ))
  ,
  DESCRIPTOR = _MYCONFIG,
  __module__ = 'starbound_pb2'
  # @@protoc_insertion_point(class_scope:MyConfig)
  ))
_sym_db.RegisterMessage(MyConfig)
_sym_db.RegisterMessage(MyConfig.DictionaryEntry)

Empty = _reflection.GeneratedProtocolMessageType('Empty', (_message.Message,), dict(
  DESCRIPTOR = _EMPTY,
  __module__ = 'starbound_pb2'
  # @@protoc_insertion_point(class_scope:Empty)
  ))
_sym_db.RegisterMessage(Empty)


_MYDICT_DICTIONARYENTRY._options = None
_MYCONFIG_DICTIONARYENTRY._options = None

_DICTSENDER = _descriptor.ServiceDescriptor(
  name='DictSender',
  full_name='DictSender',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=244,
  serialized_end=288,
  methods=[
  _descriptor.MethodDescriptor(
    name='send_dict',
    full_name='DictSender.send_dict',
    index=0,
    containing_service=None,
    input_type=_EMPTY,
    output_type=_MYDICT,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_DICTSENDER)

DESCRIPTOR.services_by_name['DictSender'] = _DICTSENDER


_GETCONFIG = _descriptor.ServiceDescriptor(
  name='GetConfig',
  full_name='GetConfig',
  file=DESCRIPTOR,
  index=1,
  serialized_options=None,
  serialized_start=290,
  serialized_end=337,
  methods=[
  _descriptor.MethodDescriptor(
    name='send_config',
    full_name='GetConfig.send_config',
    index=0,
    containing_service=None,
    input_type=_EMPTY,
    output_type=_MYCONFIG,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_GETCONFIG)

DESCRIPTOR.services_by_name['GetConfig'] = _GETCONFIG

# @@protoc_insertion_point(module_scope)
